apply plugin: 'maven'

def isReleaseBuild() {
    return VERSION_NAME.contains("SNAPSHOT") == false
}

def getReleaseRepositoryUrl() {
    return "http://maven.mic.com/nexus/content/repositories/tm-releases/"
}

def getSnapshotRepositoryUrl() {
    return "http://maven.mic.com/nexus/content/repositories/tm-snapshots/"
}

def getRepositoryUsername() {
    return "tm-manager"
}

def getRepositoryPassword() {
    return "123456a"
}

afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                pom.groupId = GROUP
                pom.artifactId = POM_ARTIFACT_ID_UPDATE
                pom.version = VERSION_NAME_UPDATE

                repository(url: getReleaseRepositoryUrl()) {
                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                }

                snapshotRepository(url: getSnapshotRepositoryUrl()) {
                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                }

                pom.project {
                    name POM_NAME_UPDATE
                    packaging POM_PACKAGING
                }
            }
        }
    }

    task installArchives(type: Upload) {
        description "Installs the artifacts to the local Maven repository."
        configuration = configurations['archives']
        repositories {
            mavenDeployer {
                pom.groupId = GROUP
                pom.artifactId = POM_ARTIFACT_ID_UPDATE
                pom.version = VERSION_NAME_UPDATE
                repository url: "file://E://awork//apache-maven-3.2.1//repository"

                pom.project {
                    name POM_NAME_UPDATE
                    packaging POM_PACKAGING
                }
            }
        }
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    artifacts {
        archives androidSourcesJar
    }
}